<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

	<head>
		<link rel="preconnect" href="https://cdn.jsdelivr.net">
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Radio</title>

		<link rel="icon" href="/favicon.ico">
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
		<link rel="manifest" href="/site.webmanifest">

		<meta property="og:title" content="Online Radio" />
		<meta property="og:url" content="https://radio.stash.in.net/" />
		<meta property="og:image" content="https://radio.stash.in.net/opengraph.png" />

		<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" crossorigin="anonymous">
		<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/material-icons@1.13.12/iconfont/material-icons.min.css" crossorigin="anonymous">
		<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/plyr@3.7.8/dist/plyr.min.css" crossorigin="anonymous">

		<style>
			body {
				padding-top: 2rem;
				background-color: #333;
			}

			p { text-align: center; }

			.card {
				margin: 0 0.5rem 1rem 0.5rem;
				padding-top: 0.5rem;
				width: 15rem;
			}

			.card-body {
				padding-left: 0;
				padding-right: 0;
				text-align: center;
			}

			.card img {
				width: 100%;
				height: 12rem;
			}

			.card p { min-height: 2rem; }
			.card pre { margin: 0; }

			.card pre span { vertical-align: text-bottom; }
			
			.card a { display: block; }

			.modal-header { border-bottom: none; padding-bottom: 0; }
			.modal-body { text-align: center; padding-top: 0; }
		</style>
	</head>

	<body>
		<div class="container">
			<div class="row justify-content-center">
				{{#each .}}
				{{#if break}}
				</div>
				<div class="row justify-content-center">
				{{else}}
				<div class="card">
					<a href="{{url}}" data-format="{{format}}" data-bs-toggle="modal" data-bs-target="#playerModal">
						<img class="card-img-top" src="logos/{{logo}}" width="300" height="300">
					</a>
					<div class="card-body">
						{{#if freq}}
						<pre><span class="material-icons-outlined">radio</span> {{freq}} Mhz</pre>
						{{/if}}
						<p class="card-text">{{title}}</p>
						<a href="{{url}}" class="btn btn-primary" data-format="{{format}}" data-bs-toggle="modal" data-bs-target="#playerModal">Listen</a>
					</div>
				</div>
				{{/if}}
				{{/each}}
			</div>
		</div>

		<div class="modal fade" id="playerModal" tabindex="-1" role="dialog" aria-labelledby="playerModalTitle" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
					</div>
				</div>
			</div>
		</div>

		<script src="//cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" crossorigin="anonymous"></script>
		<script src="//cdn.jsdelivr.net/npm/hls.js@1.5.15/dist/hls.min.js" crossorigin="anonymous"></script>
		<script src="//cdn.jsdelivr.net/npm/plyr@3.7.8/dist/plyr.min.js" crossorigin="anonymous"></script>
		<script type="text/javascript">
			const playerModal = document.getElementById("playerModal");
			const modal = document.querySelector("div.modal-body");
			const hls = new Hls();
			let plyr = null;

			if (playerModal) {

				playerModal.addEventListener("show.bs.modal", event => {
					const item = event.relatedTarget;
					const card = item.closest("div.card");

					console.log(`Source: ${item.dataset.format} / ${item.getAttribute("href")}`);

					modal.innerHTML = `<img src="${card.querySelector("img").getAttribute("src")}" width="300" height="300" /><audio id="player" playsinline controls></audio>`;

					plyr = new Plyr("#player", {
						"autoplay": true,
						"controls": [ "play", "progress", "mute", "volume", "airplay"],
						"displayDuration": false,
						"playsinline": true
					});

					switch (item.dataset.format) {
						case "application/x-mpegurl":
							hls.loadSource(item.getAttribute("href"));
							hls.attachMedia(player);
							break;
						default:
							plyr.source = {
								type: "audio",
								title: card.querySelector("p").textContent,
								"sources": [
									{
										"src": item.getAttribute("href"),
										"type": item.dataset.format
									},
								]
							};
							break;
					}
				});

				playerModal.addEventListener("hide.bs.modal", event => {
					plyr.destroy();
					modal.replaceChildren();
				});

			}
		</script>
	</body>
</html>